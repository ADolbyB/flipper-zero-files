DUCKY_LANG UK
DELAY 2000
GUI r
DELAY 500
STRING powershell
ENTER
DELAY 1000
STRING [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms");
SHIFT ENTER
STRING Add-Type -Assembly PresentationFramework
REM xml of the wpf xaml code. this is the window to be shown
SHIFT ENTER
STRING [xml]$xaml = '<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Width="200" Height="244" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Topmost="True" ShowInTaskbar="False" ResizeMode="NoResize"><Grid><Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform"><Canvas Name="svg8" Width="191.15729" Height="220.26588"><Canvas.RenderTransform><TranslateTransform X="0" Y="0"/></Canvas.RenderTransform><Canvas Name="layer1"><Canvas.RenderTransform><TranslateTransform X="-10.383199" Y="-6.9734028"/></Canvas.RenderTransform><Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path28" Fill="#FF000000" StrokeThickness="0.352778"><Path.Data><PathGeometry Figures="m 36.151591 225.56359 c 0.482503 -3.25532 2.3038 -9.64434 3.919259 -13.74857 4.126619 -10.48407 9.847771 -19.43472 16.422932 -25.6934 4.558329 -4.33892 13.537681 -11.38235 13.965477 -10.95455 0.125018 0.12502 -0.125934 0.8196 -0.557674 1.54351 -1.313445 2.20231 -2.543313 5.10316 -2.935066 6.92285 -0.406555 1.88846 -0.237052 4.99588 0.301911 5.53484 0.218461 0.21847 1.530481 0.0259 3.665763 -0.53815 7.883384 -2.08228 14.55105 -2.98244 30.256737 -4.08479 5.49883 -0.38595 11.53133 -0.86822 13.40555 -1.07172 17.51218 -1.90146 34.18687 -9.7234 46.92968 -22.01428 13.31578 -12.84352 21.40196 -29.02102 24.07599 -48.16727 0.54946 -3.93418 0.55314 -14.811811 0.006 -19.049995 -1.85389 -14.371945 -7.85825 -28.889413 -16.49561 -39.883391 -1.12492 -1.43184 -1.75548 -2.705908 -2.27499 -4.596666 -0.94372 -3.434704 -3.06746 -7.728941 -5.16558 -10.4449 -0.92824 -1.201574 -3.67208 -4.323267 -6.09743 -6.937097 -2.42535 -2.613829 -4.94889 -5.645511 -5.60786 -6.73707 -1.12033 -1.855753 -1.17163 -2.073161 -0.78986 -3.347378 0.22455 -0.749498 0.69283 -1.714131 1.04062 -2.143628 l 0.63234 -0.780905 1.81356 0.919004 c 3.01638 1.528515 10.98063 7.050234 14.72926 10.211993 16.38442 13.81934 27.72078 32.770594 32.23963 53.895746 2.59415 12.127427 2.54048 26.842967 -0.14334 39.301237 -7.25178 33.66254 -31.71006 60.6236 -64.58376 71.19253 -9.45149 3.03866 -14.93943 3.84986 -35.069481 5.18382 -11.440206 0.7581 -18.125807 1.58982 -23.752722 2.95495 -3.889325 0.94358 -4.360492 1.22209 -3.809414 2.2518 0.680406 1.27135 4.302083 4.30049 8.422361 7.04441 2.237557 1.49011 3.881184 2.77165 3.652506 2.84788 -0.228677 0.0762 -1.830327 -0.12137 -3.559221 -0.4391 -9.674588 -1.77794 -19.110064 -2.12944 -23.646712 -0.88092 -3.266931 0.89909 -8.856042 3.53291 -12.350132 5.81989 -1.449709 0.94887 -3.95686 3.03917 -5.571448 4.64512 -1.614589 1.60594 -3.021676 2.9199 -3.126862 2.9199 -0.105185 0 -0.07948 -0.75407 0.05713 -1.6757 z M 46.919442 179.17208 C 42.218209 175.51407 34.787617 168.14222 31.132833 163.51025 20.184722 149.63495 13.564477 134.19794 10.882468 116.29068 10.14703 111.3803 10.244757 95.133538 11.039497 90.18512 14.864325 66.369982 25.907114 46.29362 43.436841 31.285078 49.728237 25.89853 59.996953 19.116434 61.176155 19.568936 c 0.806334 0.309419 1.664212 1.83922 1.856387 3.310383 0.152979 1.17111 -0.0433 1.645383 -1.587351 3.835466 -0.969056 1.37451 -3.709501 4.54951 -6.089883 7.055556 -5.908725 6.220656 -8.814206 10.895764 -10.203477 16.418041 -0.235006 0.934149 -1.008206 2.354556 -1.809631 3.324391 -5.928157 7.173888 -11.420041 17.506312 -14.207357 26.729697 -2.428413 8.035756 -3.410672 14.804094 -3.410672 23.50153 0 12.95385 2.450513 23.55008 8.122978 35.12445 4.337178 8.84979 9.877318 16.47561 16.65594 22.92635 3.297382 3.13789 8.180462 7.06269 11.015917 8.85409 0.894824 0.56535 1.627237 1.13916 1.627582 1.27514 3.5e-4 0.13599 -1.626556 1.56446 -3.61534 3.17439 -1.988785 1.60994 -4.624166 3.84024 -5.856404 4.95623 -1.232239 1.11599 -2.422864 2.02245 -2.645834 2.01435 -0.222969 -0.008 -2.072276 -1.31172 -4.109568 -2.89692 z m 51.711811 -5.56509 C 71.134328 170.45934 48.395485 152.37013 39.549108 126.60595 34.966486 113.25952 34.470298 99.246126 38.09643 85.579222 c 1.44248 -5.436711 4.765279 -13.57666 6.470801 -15.851689 0.512697 -0.683895 0.537501 -0.674782 0.960196 0.352778 2.37908 5.783496 3.96017 8.37371 7.153518 11.719225 l 2.09779 2.197753 -0.90707 2.744498 c -4.068067 12.308706 -3.443548 26.395693 1.707935 38.525013 2.822498 6.64565 6.399379 11.91037 11.637783 17.12935 7.77494 7.7461 16.958554 12.67197 28.032615 15.03601 4.972152 1.06143 15.436322 1.16747 20.284722 0.20555 13.07758 -2.59457 25.43461 -9.72196 30.5384 -17.6142 1.64707 -2.54695 1.96751 -4.09839 1.18643 -5.74438 -0.64025 -1.34922 -4.15737 -4.75929 -4.9087 -4.75929 -0.25701 0 -1.51148 1.23736 -2.78771 2.74969 -6.40504 7.58996 -15.5602 12.96193 -25.43953 14.92714 -1.56018 0.31036 -4.7426 0.48735 -8.64306 0.48069 -5.612419 -0.01 -6.526353 -0.10146 -10.054163 -1.01076 -4.746505 -1.22343 -9.088138 -3.06114 -13.130255 -5.55773 -4.12828 -2.54979 -10.629431 -8.93827 -13.307991 -13.07733 -8.052164 -12.44267 -9.456163 -27.31762 -3.882969 -41.138909 0.669375 -1.660027 1.217048 -3.0581 1.217048 -3.106829 0 -0.04873 -1.073916 -0.652925 -2.386482 -1.342658 C 55.269173 77.888991 50.44722 69.721056 50.44722 59.594856 c 0 -4.966324 0.699491 -8.060196 2.814503 -12.448625 1.495196 -3.102373 2.200692 -4.05953 5.850523 -7.9375 5.452798 -5.79363 8.147407 -9.203856 9.428512 -11.932478 0.926765 -1.973911 1.027833 -2.506121 0.876798 -4.61706 -0.220218 -3.07782 -1.742588 -6.011469 -4.460011 -8.594562 -2.340441 -2.224744 -5.516312 -3.660613 -10.7318 -4.8520382 -5.659829 -1.2929307 -3.746447 -2.206509 4.688142 -2.2384367 5.955217 -0.022543 8.162106 0.451608 12.437808 2.6722614 7.135217 3.7057885 11.106217 10.8959275 10.092122 18.2734255 -0.452081 3.28888 -2.144232 6.54216 -6.238751 11.994444 -1.967079 2.619375 -4.053766 5.65355 -4.637084 6.742606 -4.166539 7.778955 -1.819293 14.954384 5.652643 17.279913 3.809404 1.185619 8.108403 0.742276 14.074006 -1.451409 5.062608 -1.861636 8.242459 -2.485513 13.802279 -2.707971 6.3662 -0.254724 10.49995 0.360433 17.08226 2.54206 5.85047 1.939075 8.37248 2.422034 11.57466 2.216531 4.59894 -0.295141 8.59208 -2.801013 10.11881 -6.349993 0.66676 -1.549929 0.76455 -2.293423 0.63757 -4.847745 -0.20465 -4.11691 -1.24968 -6.292812 -6.27907 -13.073873 -4.93582 -6.654903 -6.34339 -9.502265 -6.60835 -13.368007 -0.5831 -8.507159 4.95068 -15.908986 14.19249 -18.9834879 2.57416 -0.8563566 3.30283 -0.9383806 8.29027 -0.9332225 5.42658 0.00561 8.097 0.3340387 8.20761 1.0094307 0.0317 0.1933561 -1.91677 0.8720218 -4.32987 1.508146 -5.87927 1.5498547 -7.75944 2.4659637 -10.21828 4.9788277 -2.79256 2.85392 -4.01268 5.475592 -4.04023 8.68125 -0.0353 4.104462 1.46432 6.396643 10.97201 16.771071 4.03355 4.401268 6.06691 7.83442 7.14013 12.055558 2.40634 9.464446 0.26408 18.723306 -5.86344 25.341753 -1.97883 2.137378 -5.73045 4.860942 -8.00473 5.811195 -0.69934 0.292206 -1.27153 0.745441 -1.27153 1.007191 0 0.261754 0.45958 1.590414 1.0213 2.952577 2.97345 7.210694 4.01438 16.503172 2.6775 23.902322 -0.28045 1.55222 -0.51304 3.08152 -0.51686 3.39845 -0.004 0.32039 1.29182 1.51983 2.91832 2.70156 5.5212 4.01142 9.28093 8.81593 10.68603 13.65554 0.87823 3.02489 0.78586 7.76856 -0.21295 10.93612 -1.96429 6.22938 -6.54219 12.21619 -13.41214 17.53991 -9.26963 7.18331 -20.16392 11.88973 -32.08898 13.8627 -4.03228 0.66713 -14.26598 0.95697 -18.138187 0.5137 z m 13.808157 -41.96558 c 5.29917 -1.27045 9.78195 -3.77713 13.65863 -7.63764 3.88013 -3.86394 6.98819 -9.64643 7.92549 -14.74525 0.49408 -2.68773 0.49408 -8.29518 0 -10.982914 -0.94392 -5.134818 -3.7019 -10.304561 -7.67332 -14.383399 -5.69943 -5.853592 -12.40438 -8.6952 -20.51688 -8.6952 -8.151804 0 -15.058854 2.980616 -20.721647 8.942063 -3.059906 3.221285 -4.996152 6.438519 -6.504975 10.80855 -1.113727 3.225709 -1.157118 3.556445 -1.157118 8.81944 0 5.263 0.04339 5.59374 1.157118 8.81945 1.508823 4.37003 3.445069 7.58726 6.504975 10.80855 4.067853 4.28239 9.185646 7.20633 14.680075 8.38715 3.508092 0.75393 9.178952 0.6908 12.647652 -0.1408 z m 55.59058 0.0721 c -0.70411 -4.54895 -2.98889 -9.01862 -6.74567 -13.19644 -1.27611 -1.41913 -2.14835 -2.68596 -2.04135 -2.96482 0.10277 -0.2678 0.45117 -2.27495 0.77423 -4.46034 1.07737 -7.28806 0.25679 -16.609969 -2.12134 -24.098757 l -0.82891 -2.610241 2.08322 -2.155592 c 3.15623 -3.265879 5.86324 -7.532381 6.99339 -11.022246 0.23888 -0.737651 0.61774 -1.289649 0.84191 -1.226664 0.71709 0.201475 3.67174 6.646559 5.3012 11.563685 4.02607 12.149268 4.74831 23.568205 2.29553 36.293275 -1.13218 5.8738 -4.81553 16.27061 -5.76429 16.27061 -0.24416 0 -0.5714 -0.99365 -0.78792 -2.39247 z M 75.637314 56.457071 c -1.013545 -1.121065 -0.876357 -3.944433 0.308084 -6.340595 0.519794 -1.051553 2.391287 -3.816911 4.15888 -6.145245 1.767593 -2.328333 3.610511 -4.905998 4.095372 -5.728144 0.993811 -1.685135 1.860543 -2.043543 7.875348 -3.256591 10.926942 -2.203716 22.750242 -1.769072 32.902882 1.209563 1.84784 0.542129 2.14952 0.776278 3.28293 2.548077 0.68645 1.073099 2.53238 3.635732 4.10206 5.694738 4.61544 6.054224 5.86649 9.632706 4.13652 11.832004 -0.40213 0.511235 -0.96332 0.92952 -1.24706 0.92952 -0.28375 0 -2.13754 -0.861187 -4.11954 -1.913745 -4.20931 -2.235405 -9.45369 -4.122554 -14.48761 -5.213255 -4.79999 -1.040014 -15.64528 -1.136438 -20.513237 -0.182383 -4.962479 0.97258 -10.874894 2.999726 -15.309946 5.24921 -2.233997 1.133094 -4.16325 2.060173 -4.287231 2.060173 -0.12398 0 -0.527833 -0.334497 -0.897452 -0.743327 z M 88.266046 25.028112 c -0.233408 -0.233409 -0.424381 -0.965028 -0.424381 -1.62582 0 -2.606275 -1.758005 -7.533578 -3.948914 -11.067953 -0.442538 -0.713903 -0.716357 -1.386263 -0.608485 -1.494135 0.350213 -0.350211 7.001987 -1.6054175 11.379885 -2.1474113 5.553699 -0.6875605 16.784669 -0.6875605 22.338359 0 5.12782 0.6348353 11.07895 1.8229533 11.56487 2.3088763 0.23349 0.233484 0.13999 0.674899 -0.27847 1.314698 -2.09723 3.206549 -4.08649 8.920041 -4.10501 11.790295 -0.004 0.522125 -0.13804 1.030845 -0.29926 1.130489 -0.16123 0.09964 -2.00313 -0.127197 -4.09311 -0.504091 -5.58065 -1.006376 -12.92983 -1.408519 -18.7207 -1.024384 -4.311927 0.28603 -10.176032 1.067076 -11.834645 1.576269 -0.300168 0.09215 -0.736731 -0.02342 -0.970139 -0.256833 z" FillRule="NonZero"/></Path.Data><Path.Triggers><EventTrigger RoutedEvent="Window.Loaded"><BeginStoryboard><Storyboard><ColorAnimation From="#FF000000" To="Red" Storyboard.TargetName="path28" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever"><ColorAnimation.EasingFunction><CubicEase EasingMode="EaseIn"/></ColorAnimation.EasingFunction></ColorAnimation></Storyboard></BeginStoryboard></EventTrigger></Path.Triggers></Path></Canvas></Canvas></Viewbox></Grid></Window>'
SHIFT ENTER
REM the direction the screen is traveling in
STRING $goingRight = $true;
SHIFT ENTER
STRING $goingDown = $true;
SHIFT ENTER
REM get the screen
STRING $Screen = [System.Windows.Forms.Screen]::PrimaryScreen;
SHIFT ENTER
REM create a reader for the xml
STRING $reader = (New-Object System.Xml.XmlNodeReader $xaml)
SHIFT ENTER
REM create the window from the reader
STRING $window = [Windows.Markup.XamlReader]::Load($reader)
SHIFT ENTER
REM add right click to window to close it
STRING $handler = [Windows.Input.MouseButtonEventHandler]{ $Timer.Stop(); $window.Close(); $_.Handled = $true; }
SHIFT ENTER
STRING $window.Add_MouseRightButtonDown($handler);
SHIFT ENTER
REM set the window postion to the center of the screen
STRING $window.Left = ($Screen.Bounds.Width - $window.Width) / 2;
SHIFT ENTER
STRING $window.Top = ($Screen.Bounds.Height - $window.Height) / 2;
SHIFT ENTER
REM timer that is used to move the window
STRING $Timer = New-Object System.Windows.Forms.Timer;
SHIFT ENTER
STRING $Timer.Interval = 40;
SHIFT ENTER
STRING $Timer.add_Tick(
SHIFT ENTER
STRING { if($goingRight) {
SHIFT ENTER
REM # check to see if we are going off the right edge
STRING if(($window.Left + 2) -lt ($Screen.Bounds.Width - $window.Width)) {$window.Left = ($window.Left + 2); } else {
SHIFT ENTER
REM #change direction
STRING $script:goingRight = !$goingRight; } } else {
SHIFT ENTER
REM check to see if we are going off the left edge
STRING if(($window.Left - 2) -gt 0) { $window.Left = ($window.Left - 2); } else { $script:goingRight = !$goingRight; } }
SHIFT ENTER        
STRING if($goingDown) {
SHIFT ENTER
REM check to see if we are going off the bottom edge
STRING if(($window.Top + 2) -lt ($Screen.Bounds.Height - $window.Height)) { $window.Top = ($window.Top + 2); } else {
SHIFT ENTER
REM #change direction
STRING $script:goingDown = !$goingDown; } } else {
SHIFT ENTER
REM check to see if we are going off the top edge
STRING if(($window.Top - 2) -gt 0) { $window.Top = ($window.Top - 2); } else { $script:goingDown = !$goingDown; }}}); $Timer.Start(); $window.ShowDialog(); $Timer.Dispose();
ENTER